var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.487,1,0.635]],["body/components/AppComponent.html",[0,0.905,1,1.079,2,1.439,3,0.859,4,0.675,5,1.726,6,1.726,7,1.726,8,1.726,9,0.675,10,1.726,11,1.356,12,2.301,13,1.727,14,2.169,15,2.301,16,3.051,17,1.808,18,3.051,19,1.619,20,1.619,21,1.726,22,2.958,23,1.85,24,2.301,25,2.301,26,3.432,27,2.301,28,3.051,29,1.079,30,2.301,31,3.813,32,1.079,33,0.09,34,1.726,35,1.726,36,1.726,37,2.301,38,2.301,39,1.356,40,2.288,41,3.051,42,1.145,43,0.675,44,0.899,45,1.356,46,0.859,47,0.859,48,1.079,49,2.301,50,2.301,51,1.726,52,2.761,53,1.726,54,1.439,55,1.726,56,0.675,57,1.726,58,1.726,59,0.517,60,1.726,61,1.726,62,0.047,63,0.062,64,0.047]],["title/modules/AppModule.html",[65,1.015,66,1.015]],["body/modules/AppModule.html",[1,1.244,3,0.854,4,0.671,9,0.671,23,1.074,33,0.089,42,1.559,43,0.671,44,1.155,45,1.349,46,0.854,47,0.854,48,1.074,56,1.155,59,0.885,62,0.047,63,0.062,64,0.047,65,1.074,66,2.037,67,0.854,68,1.074,69,2.582,70,2.029,71,2.582,72,1.349,73,1.718,74,1.718,75,1.718,76,1.718,77,1.718,78,1.469,79,0.885,80,2.294,81,1.718,82,1.718,83,2.277,84,2.294,85,3.041,86,1.718,87,1.349,88,2.294,89,3.041,90,3.041,91,1.718,92,3.041,93,1.718,94,2.277,95,2.277,96,1.718,97,1.718,98,1.718,99,1.074,100,1.718]],["title/modules/AppRoutingModule.html",[65,1.015,78,0.808]],["body/modules/AppRoutingModule.html",[0,0.859,3,1.066,4,0.837,9,0.837,33,0.089,42,1.53,43,0.837,44,1.033,45,1.683,46,1.066,47,1.066,56,1.033,59,0.792,62,0.058,63,0.072,64,0.058,67,1.066,72,1.683,78,1.315,84,2.142,88,2.644,97,2.142,98,2.142,99,1.34,100,2.142,101,2.84,102,2.84,103,1.793,104,3.505,105,2.142,106,2.142,107,3.801,108,2.142,109,2.84,110,2.142,111,2.84]],["title/injectables/BattleService.html",[79,0.487,112,1.015]],["body/injectables/BattleService.html",[3,0.576,4,0.453,9,0.453,11,1.942,13,1.084,19,1.084,20,1.084,24,1.158,29,0.724,32,0.724,33,0.091,39,2.038,42,1.034,43,0.453,46,0.576,47,0.576,54,1.682,62,0.031,63,0.047,64,0.031,79,0.692,93,1.158,112,1.084,113,1.535,114,1.158,115,1.734,116,2.299,117,2.308,118,2.308,119,2.299,120,2.299,121,2.299,122,2.308,123,1.734,124,1.734,125,3.06,126,2.299,127,2.299,128,2.299,129,2.299,130,2.756,131,1.535,132,3.44,133,1.535,134,2.472,135,2.472,136,2.756,137,1.535,138,2.038,139,1.734,140,2.299,141,2.472,142,2.299,143,1.535,144,3.06,145,1.813,146,1.813,147,2.487,148,2.766,149,2.442,150,2.299,151,1.535,152,2.962,153,2.766,154,1.362,155,3.06,156,2.756,157,2.299,158,1.535,159,2.299,160,2.299,161,2.299,162,2.299,163,1.734,164,1.734,165,2.756,166,1.734,167,2.299,168,3.277,169,1.535,170,2.299,171,2.299,172,2.299,173,1.734,174,2.299,175,2.299,176,1.535,177,1.535,178,1.158,179,1.535,180,2.595,181,1.158,182,2.472,183,1.535,184,1.535,185,1.535,186,1.535,187,1.535]],["title/components/ScoreTableComponent.html",[0,0.487,59,0.487]],["body/components/ScoreTableComponent.html",[0,0.576,1,0.234,2,0.638,3,0.298,4,0.234,5,0.598,6,0.598,7,0.598,8,0.598,9,0.234,11,0.801,13,1.352,14,0.801,15,1.02,17,0.801,19,1.637,20,1.544,21,0.598,22,1.923,23,1.202,25,1.02,27,1.02,29,0.374,30,1.02,32,0.985,33,0.091,34,1.02,35,1.575,36,1.923,39,1.613,42,0.507,43,0.234,44,0.234,46,0.298,47,0.298,48,0.374,49,1.02,50,1.02,51,0.598,52,1.575,53,0.598,54,1.352,55,0.598,56,0.234,57,0.598,58,0.598,59,0.472,60,0.598,61,0.598,62,0.016,63,0.028,64,0.016,79,0.399,96,0.598,99,1.352,106,0.598,124,1.02,134,0.598,135,0.598,138,1.237,139,1.575,141,2.053,145,0.801,146,0.801,147,1.836,149,1.237,154,1.613,163,1.02,164,1.02,173,1.02,180,0.598,181,0.598,182,0.598,188,2.162,189,0.598,190,1.352,191,1.767,192,1.767,193,1.352,194,1.767,195,2.991,196,1.767,197,1.767,198,1.352,199,2.087,200,2.087,201,1.352,202,0.793,203,1.352,204,1.352,205,1.352,206,1.352,207,1.352,208,0.793,209,1.352,210,2.549,211,3.617,212,0.793,213,1.352,214,1.02,215,1.02,216,1.352,217,0.793,218,0.793,219,2.087,220,1.575,221,2.087,222,2.549,223,2.087,224,2.087,225,0.793,226,2.087,227,1.352,228,0.793,229,1.352,230,1.352,231,1.352,232,0.793,233,1.575,234,0.793,235,0.793,236,0.793,237,1.352,238,0.793,239,1.767,240,0.793,241,0.793,242,0.793,243,0.793,244,0.793,245,0.793,246,0.793,247,0.793,248,0.793,249,0.598,250,0.793,251,0.793,252,0.793,253,1.352,254,0.793,255,3.413,256,1.575,257,1.352,258,1.02,259,1.575,260,1.352,261,1.352,262,2.087,263,2.087,264,1.352,265,1.352,266,0.793,267,0.793,268,2.342,269,1.352,270,2.342,271,0.793,272,1.767,273,0.793,274,3.274,275,0.793,276,2.867,277,0.793,278,2.342,279,0.793,280,3.347,281,1.352,282,1.767,283,1.352,284,1.767,285,2.867,286,2.087,287,0.793,288,1.352,289,2.867,290,2.342,291,1.352,292,1.767,293,0.793,294,1.352,295,2.087,296,2.342,297,1.767,298,3.098,299,1.767,300,2.087,301,2.087,302,1.767,303,1.767,304,1.767,305,0.793,306,1.352,307,2.721,308,1.352,309,0.793,310,1.352,311,0.793,312,0.793,313,1.333,314,2.342,315,1.352,316,0.793,317,1.767,318,0.793,319,1.352,320,2.721,321,0.793,322,1.767,323,0.793,324,1.575,325,2.867,326,1.352,327,0.793,328,2.087,329,2.549,330,0.793,331,0.793,332,0.793,333,1.352,334,0.793,335,1.767,336,2.087,337,2.549,338,1.352,339,1.767,340,0.793,341,1.352,342,0.793,343,0.598,344,1.352,345,0.793,346,0.793,347,2.087,348,1.352,349,1.352,350,2.342,351,0.793,352,0.793,353,0.793,354,0.793,355,0.793,356,0.793,357,0.793,358,1.767,359,0.793,360,0.793,361,0.793,362,0.793,363,2.087,364,1.352,365,0.793,366,0.793,367,0.793,368,0.793,369,0.793,370,3.274,371,0.793,372,0.793,373,0.793,374,0.793,375,1.352,376,1.352,377,1.352,378,2.087,379,1.352,380,1.352,381,0.793,382,1.352,383,1.352,384,1.352,385,0.793]],["title/coverage.html",[386,2.209]],["body/coverage.html",[0,0.913,1,0.883,9,0.883,10,2.258,20,1.412,32,1.412,33,0.087,44,0.883,56,0.883,59,0.677,62,0.061,63,0.074,64,0.061,79,0.677,99,1.412,112,1.412,114,2.258,123,2.258,145,1.774,188,2.258,189,2.258,313,3.121,386,2.258,387,2.994,388,2.994,389,2.994,390,2.994,391,2.994,392,2.994,393,2.994,394,2.994,395,2.994,396,2.994]],["title/dependencies.html",[68,1.22,397,1.803]],["body/dependencies.html",[33,0.091,43,0.832,62,0.058,63,0.071,64,0.058,68,1.332,70,1.673,86,2.634,87,2.069,91,2.13,105,2.13,178,2.13,398,2.823,399,4.246,400,2.823,401,2.823,402,2.823,403,2.823,404,2.823,405,2.823,406,2.823,407,2.823,408,2.823,409,2.823,410,2.823,411,2.823,412,2.823,413,2.823,414,2.823,415,2.823,416,2.823,417,2.823,418,2.823,419,2.823,420,2.823,421,2.823,422,2.823]],["title/index.html",[29,0.85,423,1.803,424,1.803]],["body/index.html",[0,0.779,2,1.502,4,0.584,12,1.494,13,1.626,14,1.174,17,2.148,19,0.934,23,1.304,33,0.057,37,1.494,38,2.085,54,1.502,62,0.041,63,0.057,64,0.041,79,0.448,108,1.494,110,1.494,115,1.494,117,1.494,118,1.494,122,2.402,138,1.174,146,2.148,147,1.174,149,1.174,153,1.494,154,1.174,166,2.402,214,1.494,215,1.494,220,2.085,233,1.494,249,1.494,256,2.085,258,1.494,259,1.494,324,1.494,343,1.494,425,1.981,426,1.981,427,2.764,428,3.184,429,1.981,430,1.981,431,1.981,432,1.981,433,1.981,434,1.981,435,1.981,436,1.981,437,1.981,438,1.981,439,1.981,440,1.981,441,1.981,442,1.981,443,2.764,444,2.764,445,1.981,446,1.981,447,1.981,448,1.981,449,2.764,450,1.981,451,1.981,452,1.981,453,1.981,454,1.981,455,1.981,456,1.981,457,1.981,458,1.981,459,1.981,460,1.981,461,1.981,462,3.184,463,2.764,464,1.981,465,1.981,466,1.981,467,1.981,468,1.981,469,1.981,470,1.981,471,1.981,472,1.981,473,1.981,474,1.981,475,3.446,476,1.981,477,1.981,478,2.764,479,3.184,480,3.184,481,1.981,482,1.981,483,2.764,484,1.981,485,1.981,486,1.981,487,1.981,488,1.981,489,1.981,490,1.981,491,1.981,492,1.981,493,1.981,494,2.764,495,1.981,496,1.981,497,1.981,498,1.981,499,1.981,500,1.981,501,2.764,502,1.981,503,1.981,504,1.981,505,1.981,506,1.981,507,1.981,508,1.981,509,1.981,510,1.981,511,1.981,512,1.981,513,1.981,514,1.981,515,1.981,516,1.981,517,1.981,518,1.981,519,1.981,520,1.981,521,1.981,522,1.981,523,1.981,524,1.981,525,1.981,526,1.981,527,2.764,528,2.764,529,2.764,530,1.981,531,1.981,532,1.981,533,1.981,534,1.981,535,1.981,536,1.981,537,1.981,538,1.981,539,1.981,540,1.981,541,1.981]],["title/modules.html",[67,1.098]],["body/modules.html",[33,0.079,62,0.068,63,0.079,64,0.068,66,1.566,67,1.246,78,1.246,87,1.968,542,3.321,543,3.321,544,3.848,545,3.321,546,3.321]],["title/overview.html",[547,2.209]],["body/overview.html",[1,1.232,2,1.297,33,0.087,44,1.104,48,1.297,56,1.104,59,0.847,62,0.056,63,0.07,64,0.056,65,1.297,66,2.066,67,1.031,68,1.297,69,2.074,70,1.629,71,2.074,72,1.629,73,2.074,74,2.074,75,2.074,76,2.074,77,2.074,78,1.405,79,0.847,80,2.591,81,2.074,82,2.074,103,1.297,112,1.297,148,2.074,152,2.074,547,2.074,548,2.749,549,2.749]],["title/routes.html",[103,1.381]],["body/routes.html",[33,0.08,62,0.07,63,0.08,64,0.07,103,1.618]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":255,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["0.1.1",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0.3em",{"_index":369,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["0.5rem",{"_index":364,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["0.8.26",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["0.95em",{"_index":321,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["0123456789abcdef",{"_index":254,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["1",{"_index":148,"title":{},"body":{"injectables/BattleService.html":{},"overview.html":{}}}],["1.0.2",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":323,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["1.5em",{"_index":287,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["1.9.0",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":316,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["100",{"_index":313,"title":{},"body":{"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["100px",{"_index":271,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["10px",{"_index":269,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["1em",{"_index":308,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["1px",{"_index":299,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["1rem",{"_index":288,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["2",{"_index":152,"title":{},"body":{"injectables/BattleService.html":{},"overview.html":{}}}],["2.3.3",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":371,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["20px",{"_index":345,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["29/29",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":306,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["2px",{"_index":363,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["3",{"_index":549,"title":{},"body":{"overview.html":{}}}],["3.3.1",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":349,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["300",{"_index":327,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["31/31",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["398b93",{"_index":267,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["3px",{"_index":302,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["4",{"_index":548,"title":{},"body":{"overview.html":{}}}],["4.3.1",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":365,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["4px",{"_index":344,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["5",{"_index":283,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["50",{"_index":296,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["500px",{"_index":359,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["55",{"_index":332,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["5px",{"_index":367,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["6.3.3",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":361,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["60px",{"_index":273,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["7.2.0",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["7.3.8",{"_index":431,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":362,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["700px",{"_index":334,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["8/8",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":312,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["8aa39b",{"_index":277,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["8em",{"_index":368,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["90px",{"_index":346,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["above",{"_index":536,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":338,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["actual_component",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["alerts",{"_index":239,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["align",{"_index":290,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["align:center",{"_index":379,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["align:middle",{"_index":382,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["alphabet",{"_index":206,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["although",{"_index":450,"title":{},"body":{"index.html":{}}}],["always",{"_index":469,"title":{},"body":{"index.html":{}}}],["angular",{"_index":428,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/BattleService.html":{}}}],["angular/compiler",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":495,"title":{},"body":{"index.html":{}}}],["apart",{"_index":525,"title":{},"body":{"index.html":{}}}],["api",{"_index":117,"title":{},"body":{"injectables/BattleService.html":{},"index.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["app.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appears",{"_index":534,"title":{},"body":{"index.html":{}}}],["application",{"_index":475,"title":{},"body":{"index.html":{}}}],["applications",{"_index":449,"title":{},"body":{"index.html":{}}}],["applicaton",{"_index":460,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":66,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":78,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["attacked",{"_index":487,"title":{},"body":{"index.html":{}}}],["attacks",{"_index":529,"title":{},"body":{"index.html":{}}}],["auto",{"_index":309,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["automatically",{"_index":439,"title":{},"body":{"index.html":{}}}],["available",{"_index":546,"title":{},"body":{"modules.html":{}}}],["background",{"_index":276,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["background:plum",{"_index":381,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["basecolor",{"_index":266,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["battleboard",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["battleboard'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["battleboard2",{"_index":461,"title":{},"body":{"index.html":{}}}],["battleboard2'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["battleboard2component",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["battleboardcomponent",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["battleservice",{"_index":79,"title":{"injectables/BattleService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["battleship",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["battleshipfront",{"_index":425,"title":{},"body":{"index.html":{}}}],["before",{"_index":348,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["between",{"_index":519,"title":{},"body":{"index.html":{}}}],["bigger",{"_index":448,"title":{},"body":{"index.html":{}}}],["block",{"_index":336,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["board",{"_index":146,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["body",{"_index":275,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["bootstrap",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":280,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["borderradius",{"_index":268,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["both",{"_index":343,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["bottom",{"_index":163,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["box",{"_index":278,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["browse",{"_index":544,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["built",{"_index":444,"title":{},"body":{"index.html":{}}}],["calc(100",{"_index":305,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["calls",{"_index":118,"title":{},"body":{"injectables/BattleService.html":{},"index.html":{}}}],["capital",{"_index":204,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["capitalize",{"_index":198,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["capitalize(item.tostring",{"_index":261,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["capitalize(set",{"_index":201,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["capitalized",{"_index":207,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["card",{"_index":214,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["cell",{"_index":490,"title":{},"body":{"index.html":{}}}],["center",{"_index":291,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["change",{"_index":441,"title":{},"body":{"index.html":{}}}],["child",{"_index":320,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["child(2):before",{"_index":351,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["child(2n",{"_index":330,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["child(2n+1",{"_index":331,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["child(3):before",{"_index":352,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["child(4):before",{"_index":354,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["child(5):before",{"_index":356,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["circleit",{"_index":385,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["circular",{"_index":230,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["class",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["clear",{"_index":342,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["cli",{"_index":429,"title":{},"body":{"index.html":{}}}],["click",{"_index":264,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["clicked",{"_index":215,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["clicking",{"_index":488,"title":{},"body":{"index.html":{}}}],["client",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":211,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["color:white",{"_index":384,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["colors",{"_index":229,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["columns",{"_index":503,"title":{},"body":{"index.html":{}}}],["comments",{"_index":357,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["communications",{"_index":514,"title":{},"body":{"index.html":{}}}],["complete",{"_index":119,"title":{},"body":{"injectables/BattleService.html":{}}}],["completed",{"_index":258,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{},"index.html":{},"overview.html":{}}}],["components/battleboard/battleboard.component",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/battleboard2/battleboard2.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/score",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["connection",{"_index":541,"title":{},"body":{"index.html":{}}}],["console.error(error",{"_index":250,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["console.log(data",{"_index":237,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["console.log(this.lostcounts",{"_index":247,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["console.log(this.names",{"_index":246,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["console.log(this.wincounts",{"_index":248,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["const",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ScoreTableComponent.html":{}}}],["constructor",{"_index":130,"title":{},"body":{"injectables/BattleService.html":{}}}],["constructor(http",{"_index":131,"title":{},"body":{"injectables/BattleService.html":{}}}],["constructor(private",{"_index":181,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["contains",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["content",{"_index":350,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["content:attr(data",{"_index":374,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["core",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["correctly",{"_index":531,"title":{},"body":{"index.html":{}}}],["count",{"_index":259,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["counts",{"_index":221,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["coverage",{"_index":386,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":234,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["darken($basecolor",{"_index":282,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["data",{"_index":139,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["declarations",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["dependencies",{"_index":68,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["design",{"_index":463,"title":{},"body":{"index.html":{}}}],["details",{"_index":120,"title":{},"body":{"injectables/BattleService.html":{}}}],["dev",{"_index":436,"title":{},"body":{"index.html":{}}}],["development",{"_index":432,"title":{},"body":{"index.html":{}}}],["different",{"_index":520,"title":{},"body":{"index.html":{}}}],["directive",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["directives",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["display",{"_index":335,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["display:inline",{"_index":375,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["displayed",{"_index":162,"title":{},"body":{"injectables/BattleService.html":{}}}],["displaying",{"_index":504,"title":{},"body":{"index.html":{}}}],["displays",{"_index":500,"title":{},"body":{"index.html":{}}}],["dividing",{"_index":452,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":123,"title":{},"body":{"injectables/BattleService.html":{},"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["dynamic",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":222,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["easier",{"_index":446,"title":{},"body":{"index.html":{}}}],["easy",{"_index":456,"title":{},"body":{"index.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["email",{"_index":353,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["empty",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["end",{"_index":443,"title":{},"body":{"index.html":{}}}],["enemy",{"_index":528,"title":{},"body":{"index.html":{}}}],["enemy's",{"_index":526,"title":{},"body":{"index.html":{}}}],["entered",{"_index":227,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["enters",{"_index":159,"title":{},"body":{"injectables/BattleService.html":{}}}],["error",{"_index":249,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["executes",{"_index":213,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["export",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["exports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["features",{"_index":524,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["files",{"_index":442,"title":{},"body":{"index.html":{}}}],["fire",{"_index":532,"title":{},"body":{"index.html":{}}}],["first",{"_index":154,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["font",{"_index":285,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["formsmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["front",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["fully",{"_index":509,"title":{},"body":{"index.html":{}}}],["functions",{"_index":464,"title":{},"body":{"index.html":{}}}],["further",{"_index":483,"title":{},"body":{"index.html":{}}}],["future",{"_index":458,"title":{},"body":{"index.html":{}}}],["game",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["games",{"_index":257,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["generate",{"_index":209,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["generated",{"_index":427,"title":{},"body":{"index.html":{}}}],["getallplayerdata",{"_index":125,"title":{},"body":{"injectables/BattleService.html":{}}}],["getnewboard",{"_index":126,"title":{},"body":{"injectables/BattleService.html":{}}}],["getnewboard(username",{"_index":142,"title":{},"body":{"injectables/BattleService.html":{}}}],["getplayer2id",{"_index":127,"title":{},"body":{"injectables/BattleService.html":{}}}],["getplayer2id(sockid",{"_index":150,"title":{},"body":{"injectables/BattleService.html":{}}}],["getrandomcolor",{"_index":199,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["getting",{"_index":423,"title":{"index.html":{}},"body":{}}],["getusername",{"_index":128,"title":{},"body":{"injectables/BattleService.html":{}}}],["getusername(userid",{"_index":157,"title":{},"body":{"injectables/BattleService.html":{}}}],["graph",{"_index":545,"title":{},"body":{"modules.html":{}}}],["half",{"_index":485,"title":{},"body":{"index.html":{}}}],["handled",{"_index":515,"title":{},"body":{"index.html":{}}}],["handles",{"_index":511,"title":{},"body":{"index.html":{}}}],["header",{"_index":281,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["height",{"_index":297,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["height:2.5em",{"_index":378,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["here",{"_index":265,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["hidden",{"_index":311,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["http",{"_index":136,"title":{},"body":{"injectables/BattleService.html":{}}}],["http://localhost:4200",{"_index":438,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":132,"title":{},"body":{"injectables/BattleService.html":{}}}],["httpclientmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":176,"title":{},"body":{"injectables/BattleService.html":{}}}],["id",{"_index":153,"title":{},"body":{"injectables/BattleService.html":{},"index.html":{}}}],["identifier",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":235,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["imagebig",{"_index":270,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["imagesmall",{"_index":272,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["img",{"_index":294,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["implemented",{"_index":537,"title":{},"body":{"index.html":{}}}],["implements",{"_index":190,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["important",{"_index":370,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["initialize",{"_index":144,"title":{},"body":{"injectables/BattleService.html":{}}}],["initialized",{"_index":481,"title":{},"body":{"index.html":{}}}],["initially",{"_index":491,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":112,"title":{"injectables/BattleService.html":{}},"body":{"injectables/BattleService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":113,"title":{},"body":{"injectables/BattleService.html":{}}}],["instance",{"_index":496,"title":{},"body":{"index.html":{}}}],["instantiated",{"_index":472,"title":{},"body":{"index.html":{}}}],["instantiates",{"_index":473,"title":{},"body":{"index.html":{}}}],["item.tostring().charat(0).touppercase",{"_index":260,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["jquery",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":173,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["key's",{"_index":241,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["last",{"_index":319,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["left",{"_index":324,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ScoreTableComponent.html":{},"overview.html":{}}}],["letter",{"_index":203,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["letters",{"_index":253,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["letters]:before",{"_index":373,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["lighten($basecolor",{"_index":325,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["line",{"_index":322,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["link",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["list",{"_index":226,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["lost",{"_index":220,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["lostcount",{"_index":244,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["lostcounts",{"_index":194,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["lostcounts[i",{"_index":262,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["main",{"_index":465,"title":{},"body":{"index.html":{}}}],["make",{"_index":455,"title":{},"body":{"index.html":{}}}],["makes",{"_index":445,"title":{},"body":{"index.html":{}}}],["margin",{"_index":307,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["marked",{"_index":530,"title":{},"body":{"index.html":{}}}],["matching",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["max",{"_index":304,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["media",{"_index":333,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["mentioned",{"_index":535,"title":{},"body":{"index.html":{}}}],["message",{"_index":538,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["methods",{"_index":124,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["middle",{"_index":318,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["minimal",{"_index":476,"title":{},"body":{"index.html":{}}}],["model",{"_index":175,"title":{},"body":{"injectables/BattleService.html":{}}}],["module",{"_index":65,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":67,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["names",{"_index":195,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["navigate",{"_index":437,"title":{},"body":{"index.html":{}}}],["net",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":145,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["ng",{"_index":434,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":200,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["none",{"_index":358,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["not(:first",{"_index":341,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["nth",{"_index":329,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["number",{"_index":505,"title":{},"body":{"index.html":{}}}],["observable",{"_index":177,"title":{},"body":{"injectables/BattleService.html":{}}}],["once",{"_index":508,"title":{},"body":{"index.html":{}}}],["one",{"_index":510,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":191,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["optional",{"_index":135,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["organized",{"_index":447,"title":{},"body":{"index.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overflow",{"_index":310,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["overview",{"_index":547,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":397,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":274,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["page",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["pairs",{"_index":471,"title":{},"body":{"index.html":{}}}],["param",{"_index":180,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["parameters",{"_index":134,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["part",{"_index":477,"title":{},"body":{"index.html":{}}}],["particular",{"_index":489,"title":{},"body":{"index.html":{}}}],["parts",{"_index":454,"title":{},"body":{"index.html":{}}}],["path",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phone",{"_index":355,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["play",{"_index":161,"title":{},"body":{"injectables/BattleService.html":{}}}],["player",{"_index":147,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["player's",{"_index":478,"title":{},"body":{"index.html":{}}}],["player1",{"_index":467,"title":{},"body":{"index.html":{}}}],["player2",{"_index":468,"title":{},"body":{"index.html":{}}}],["playermatches",{"_index":174,"title":{},"body":{"injectables/BattleService.html":{}}}],["playing",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["playwithfriend",{"_index":129,"title":{},"body":{"injectables/BattleService.html":{}}}],["playwithfriend(username",{"_index":167,"title":{},"body":{"injectables/BattleService.html":{}}}],["playwithfriend/:userid/:socketurl",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["populate",{"_index":140,"title":{},"body":{"injectables/BattleService.html":{}}}],["populates",{"_index":216,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["position",{"_index":337,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["positions",{"_index":480,"title":{},"body":{"index.html":{}}}],["present",{"_index":223,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["primary",{"_index":172,"title":{},"body":{"injectables/BattleService.html":{}}}],["project",{"_index":426,"title":{},"body":{"index.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["providedin",{"_index":179,"title":{},"body":{"injectables/BattleService.html":{}}}],["providers",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pseudo",{"_index":522,"title":{},"body":{"index.html":{}}}],["radius",{"_index":295,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["radius:50",{"_index":380,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["random",{"_index":210,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["randomcolors",{"_index":196,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["randomly",{"_index":482,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":121,"title":{},"body":{"injectables/BattleService.html":{}}}],["ready",{"_index":160,"title":{},"body":{"injectables/BattleService.html":{}}}],["reason",{"_index":539,"title":{},"body":{"index.html":{}}}],["received",{"_index":155,"title":{},"body":{"injectables/BattleService.html":{}}}],["regex",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["relative",{"_index":347,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["reload",{"_index":440,"title":{},"body":{"index.html":{}}}],["repository",{"_index":498,"title":{},"body":{"index.html":{}}}],["requests",{"_index":492,"title":{},"body":{"index.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respective",{"_index":219,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["rest",{"_index":512,"title":{},"body":{"index.html":{}}}],["restful",{"_index":116,"title":{},"body":{"injectables/BattleService.html":{}}}],["result",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["results",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["return",{"_index":182,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["returns",{"_index":141,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":303,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["right",{"_index":484,"title":{},"body":{"index.html":{}}}],["right:1em",{"_index":383,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{}}}],["root'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["routermodule",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":103,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":517,"title":{},"body":{"index.html":{}}}],["routing.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":433,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":178,"title":{},"body":{"injectables/BattleService.html":{},"dependencies.html":{}}}],["same",{"_index":462,"title":{},"body":{"index.html":{}}}],["score",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["scorecard",{"_index":501,"title":{},"body":{"index.html":{}}}],["scoretable",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["scoretablecomponent",{"_index":59,"title":{"components/ScoreTableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screen",{"_index":164,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{}}}],["second",{"_index":474,"title":{},"body":{"index.html":{}}}],["see",{"_index":527,"title":{},"body":{"index.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["serve",{"_index":435,"title":{},"body":{"index.html":{}}}],["server",{"_index":122,"title":{},"body":{"injectables/BattleService.html":{},"index.html":{}}}],["service",{"_index":115,"title":{},"body":{"injectables/BattleService.html":{},"index.html":{}}}],["services/battle.service",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"components/ScoreTableComponent.html":{}}}],["set",{"_index":205,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["set.charat(0).touppercase",{"_index":251,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["set.slice(1",{"_index":252,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["shadow",{"_index":301,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["ship",{"_index":479,"title":{},"body":{"index.html":{}}}],["shown",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":286,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["size:1em",{"_index":376,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["sizing",{"_index":279,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["small",{"_index":451,"title":{},"body":{"index.html":{}}}],["socket",{"_index":170,"title":{},"body":{"injectables/BattleService.html":{}}}],["socketurl",{"_index":168,"title":{},"body":{"injectables/BattleService.html":{}}}],["sockid",{"_index":156,"title":{},"body":{"injectables/BattleService.html":{}}}],["sockjs",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["solid",{"_index":300,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["src/app/app",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/battleboard/battleboard.component.ts",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["src/app/components/battleboard2/battleboard2.component.ts",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["src/app/components/score",{"_index":188,"title":{},"body":{"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["src/app/services/battle.service.ts",{"_index":114,"title":{},"body":{"injectables/BattleService.html":{},"coverage.html":{}}}],["src/app/services/battle.service.ts:13",{"_index":133,"title":{},"body":{"injectables/BattleService.html":{}}}],["src/app/services/battle.service.ts:26",{"_index":143,"title":{},"body":{"injectables/BattleService.html":{}}}],["src/app/services/battle.service.ts:35",{"_index":169,"title":{},"body":{"injectables/BattleService.html":{}}}],["src/app/services/battle.service.ts:44",{"_index":158,"title":{},"body":{"injectables/BattleService.html":{}}}],["src/app/services/battle.service.ts:52",{"_index":151,"title":{},"body":{"injectables/BattleService.html":{}}}],["src/app/services/battle.service.ts:59",{"_index":137,"title":{},"body":{"injectables/BattleService.html":{}}}],["start",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["started",{"_index":424,"title":{"index.html":{}},"body":{}}],["statements",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["stompjs",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["support",{"_index":542,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":543,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":533,"title":{},"body":{"index.html":{}}}],["table",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["table.component",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["table.component.html",{"_index":193,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.scss",{"_index":192,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.ts",{"_index":189,"title":{},"body":{"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:28",{"_index":225,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.ts:33",{"_index":232,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.ts:38",{"_index":218,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.ts:43",{"_index":228,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.ts:48",{"_index":212,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.ts:75",{"_index":202,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table.component.ts:83",{"_index":208,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["table/score",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":314,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["text",{"_index":289,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["th",{"_index":315,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["themselves",{"_index":516,"title":{},"body":{"index.html":{}}}],["third",{"_index":499,"title":{},"body":{"index.html":{}}}],["this.battleservice.getallplayerdata().subscribe(data",{"_index":236,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["this.http.get('/server/api/v1/battle/getall",{"_index":187,"title":{},"body":{"injectables/BattleService.html":{}}}],["this.http.get('/server/api/v1/battle/getplayer2id",{"_index":186,"title":{},"body":{"injectables/BattleService.html":{}}}],["this.http.get('/server/api/v1/battle/getusername",{"_index":185,"title":{},"body":{"injectables/BattleService.html":{}}}],["this.http.get('/server/api/v1/battle/newgame",{"_index":183,"title":{},"body":{"injectables/BattleService.html":{}}}],["this.http.get('/server/playwithfriend",{"_index":184,"title":{},"body":{"injectables/BattleService.html":{}}}],["this.lostcounts.push(data[i][1",{"_index":243,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["this.names.push(i",{"_index":238,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["this.randomcolors.push(this.getrandomcolor",{"_index":245,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["this.wincounts.push(data[i][0",{"_index":240,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["three",{"_index":502,"title":{},"body":{"index.html":{}}}],["through",{"_index":486,"title":{},"body":{"index.html":{}}}],["thumbnail",{"_index":231,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["times",{"_index":506,"title":{},"body":{"index.html":{}}}],["title",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":518,"title":{},"body":{"index.html":{}}}],["top",{"_index":339,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["tr",{"_index":328,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["transform",{"_index":292,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["translatey",{"_index":340,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["translatey(0",{"_index":366,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["transparent",{"_index":360,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["tslib",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":459,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"coverage.html":{}}}],["unique",{"_index":493,"title":{},"body":{"index.html":{}}}],["updated",{"_index":497,"title":{},"body":{"index.html":{}}}],["upgrade",{"_index":457,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":293,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["url",{"_index":171,"title":{},"body":{"injectables/BattleService.html":{}}}],["url's",{"_index":523,"title":{},"body":{"index.html":{}}}],["used",{"_index":138,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["user",{"_index":166,"title":{},"body":{"injectables/BattleService.html":{},"index.html":{}}}],["userid",{"_index":165,"title":{},"body":{"injectables/BattleService.html":{}}}],["username",{"_index":149,"title":{},"body":{"injectables/BattleService.html":{},"components/ScoreTableComponent.html":{},"index.html":{}}}],["users",{"_index":256,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["uses",{"_index":494,"title":{},"body":{"index.html":{}}}],["using",{"_index":521,"title":{},"body":{"index.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ScoreTableComponent.html":{}}}],["variable",{"_index":224,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["various",{"_index":453,"title":{},"body":{"index.html":{}}}],["version",{"_index":430,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":317,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["visible",{"_index":372,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["void",{"_index":217,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["web",{"_index":466,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":513,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":540,"title":{},"body":{"index.html":{}}}],["weight",{"_index":326,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["white",{"_index":284,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["width",{"_index":298,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["width:2.5em",{"_index":377,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["win",{"_index":233,"title":{},"body":{"components/ScoreTableComponent.html":{},"index.html":{}}}],["wincount",{"_index":242,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["wincounts",{"_index":197,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["wincounts[i",{"_index":263,"title":{},"body":{"components/ScoreTableComponent.html":{}}}],["won",{"_index":507,"title":{},"body":{"index.html":{}}}],["works",{"_index":470,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Empty component. Contains a link to start playing the game. This link is also shown in the score table component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'battleship-front'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                        Contains the title of the page.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {BattleboardComponent} from './components/battleboard/battleboard.component';\n\n/**\n * Empty component. Contains a link to start playing the game. This link is also shown in the score table component.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n    /**\n     * Contains the title of the page.\n     */\n    title = 'battleship-front';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Battleboard2Component', 'selector': 'app-battleboard2'},{'name': 'BattleboardComponent', 'selector': 'app-battleboard'},{'name': 'ScoreTableComponent', 'selector': 'app-score-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBattleboard2Component\n\nBattleboard2Component\n\nAppModule -->\n\nBattleboard2Component->AppModule\n\n\n\n\n\nBattleboardComponent\n\nBattleboardComponent\n\nAppModule -->\n\nBattleboardComponent->AppModule\n\n\n\n\n\nScoreTableComponent\n\nScoreTableComponent\n\nAppModule -->\n\nScoreTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBattleService\n\nBattleService\n\nAppModule -->\n\nBattleService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            Battleboard2Component\n                        \n                        \n                            BattleboardComponent\n                        \n                        \n                            ScoreTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BattleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BattleboardComponent} from './components/battleboard/battleboard.component';\nimport {BattleService} from './services/battle.service';\nimport {Battleboard2Component} from './components/battleboard2/battleboard2.component';\nimport { ScoreTableComponent } from './components/score-table/score-table.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        BattleboardComponent,\n        Battleboard2Component,\n        ScoreTableComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule\n    ],\n    providers: [BattleService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {BattleboardComponent} from './components/battleboard/battleboard.component';\nimport {Battleboard2Component} from './components/battleboard2/battleboard2.component';\nimport {ScoreTableComponent} from './components/score-table/score-table.component';\n\nconst routes: Routes = [{\n    path: 'battleboard',\n    component: BattleboardComponent\n}, {\n    path: 'playWithFriend/:userId/:socketUrl',\n    component: Battleboard2Component\n}, {\n    path: 'scoreTable',\n    component: ScoreTableComponent\n}];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattleService.html":{"url":"injectables/BattleService.html","title":"injectable - BattleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BattleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/battle.service.ts\n        \n\n            \n                Description\n            \n            \n                BattleService service that contains all the RESTful API calls. Complete details on all the API calls can be read in the server\ndocumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllPlayerData\n                            \n                            \n                                getNewBoard\n                            \n                            \n                                getPlayer2Id\n                            \n                            \n                                getUserName\n                            \n                            \n                                playWithFriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/battle.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPlayerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPlayerData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/battle.service.ts:59\n                \n            \n\n\n            \n                \n                    Used to get all the data that is used to populate the score table.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNewBoard\n                        \n                        \n                    \n                \n            \n            \n                \ngetNewBoard(username)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/battle.service.ts:26\n                \n            \n\n\n            \n                \n                    To initialize a new board for player 1.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of player 1.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPlayer2Id\n                        \n                        \n                    \n                \n            \n            \n                \ngetPlayer2Id(sockId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/battle.service.ts:52\n                \n            \n\n\n            \n                \n                    To get the player 2 id. First the ID is received and then from this ID, the player 2 username is received.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sockId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserName(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/battle.service.ts:44\n                \n            \n\n\n            \n                \n                    To get the username of player 2 when the player 2 enters their username and are ready to play. This name is then displayed\nin the bottom of the screen. Also used by player 1 to get username of player 2.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User ID of the player.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playWithFriend\n                        \n                        \n                    \n                \n            \n            \n                \nplayWithFriend(username, socketUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/battle.service.ts:35\n                \n            \n\n\n            \n                \n                    To initialize a new board for player 1.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of player 2.\n\n                                    \n                                \n                                \n                                    socketUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The socket URL, which is a primary key of PlayerMatches model in the server.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n/**\n * BattleService service that contains all the RESTful API calls. Complete details on all the API calls can be read in the server\n * documentation.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class BattleService {\n\n    /**\n     * Constructor\n     * @param http HttpClient\n     */\n    constructor(private  http: HttpClient) {\n    }\n\n    /**\n     * To initialize a new board for player 1.\n     * @param username Username of player 1.\n     */\n    getNewBoard(username) {\n        return this.http.get('/server/api/v1/battle/newgame/' + username);\n    }\n\n    /**\n     * To initialize a new board for player 1.\n     * @param username Username of player 2.\n     * @param socketUrl The socket URL, which is a primary key of PlayerMatches model in the server.\n     */\n    playWithFriend(username, socketUrl) {\n        return this.http.get('/server/playWithFriend/' + username + '/' + socketUrl);\n    }\n\n    /**\n     * To get the username of player 2 when the player 2 enters their username and are ready to play. This name is then displayed\n     * in the bottom of the screen. Also used by player 1 to get username of player 2.\n     * @param userId User ID of the player.\n     */\n    getUserName(userId) {\n        return this.http.get('/server/api/v1/battle/getUserName/' + userId);\n    }\n\n    /**\n     * To get the player 2 id. First the ID is received and then from this ID, the player 2 username is received.\n     * @param sockId\n     */\n    getPlayer2Id(sockId) {\n        return this.http.get('/server/api/v1/battle/getPlayer2Id/' + sockId);\n    }\n\n    /**\n     * Used to get all the data that is used to populate the score table.\n     */\n    getAllPlayerData() {\n        return this.http.get('/server/api/v1/battle/getAll');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreTableComponent.html":{"url":"components/ScoreTableComponent.html","title":"component - ScoreTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScoreTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/score-table/score-table.component.ts\n\n\n    \n        Description\n    \n    \n        Score Table Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-table\n            \n\n            \n                styleUrls\n                ./score-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./score-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lostCounts\n                            \n                            \n                                names\n                            \n                            \n                                randomColors\n                            \n                            \n                                winCounts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                capitalize\n                            \n                            \n                                getRandomColor\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            capitalize\n                        \n                        \n                    \n                \n            \n            \n                \ncapitalize(set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/score-table/score-table.component.ts:75\n                \n            \n\n\n            \n                \n                    Returns the name with first letter as capital.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    set\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The username.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The username with first alphabet capitalized.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRandomColor\n                        \n                        \n                    \n                \n            \n            \n                \ngetRandomColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/score-table/score-table.component.ts:83\n                \n            \n\n\n            \n                \n                    Used to generate a random color.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A Random color.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/score-table/score-table.component.ts:48\n                \n            \n\n\n            \n                \n                    Executes when the score card link is clicked. Populates the board with player data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lostCounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/score-table/score-table.component.ts:38\n                            \n                        \n\n                \n                    \n                        Contains the respective lost-counts of each player present in the names variable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            names\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/score-table/score-table.component.ts:28\n                            \n                        \n\n                \n                    \n                        Contains the list of names to be entered in the score table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            randomColors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/score-table/score-table.component.ts:43\n                            \n                        \n\n                \n                    \n                        Contains list of random colors that will be used for the circular thumbnail of each player.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            winCounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/score-table/score-table.component.ts:33\n                            \n                        \n\n                \n                    \n                        Contains the respective win-counts of each player present in the names variable.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {BattleService} from '../../services/battle.service';\n\n/**\n * Score Table Component\n */\n@Component({\n    selector: 'app-score-table',\n    templateUrl: './score-table.component.html',\n    styleUrls: ['./score-table.component.scss']\n})\n\n/**\n * Component that creates the score-table.\n */\nexport class ScoreTableComponent implements OnInit {\n\n\n    /**\n     * @ignore\n     */\n    constructor(private battleService: BattleService) {\n    }\n\n    /**\n     * Contains the list of names to be entered in the score table.\n     */\n    names = [];\n\n    /**\n     * Contains the respective win-counts of each player present in the names variable.\n     */\n    winCounts = [];\n\n    /**\n     * Contains the respective lost-counts of each player present in the names variable.\n     */\n    lostCounts = [];\n\n    /**\n     * Contains list of random colors that will be used for the circular thumbnail of each player.\n     */\n    randomColors = [];\n\n    /**\n     * Executes when the score card link is clicked. Populates the board with player data.\n     */\n    ngOnInit() {\n        this.battleService.getAllPlayerData().subscribe(data => {\n            console.log(data);\n            // console.log(data);\n            for (const i in data) {\n                this.names.push(i); // alerts key\n                this.winCounts.push(data[i][0]); //alerts key's value (wincount)\n                this.lostCounts.push(data[i][1]); //alerts other key value (lostcount)\n                this.randomColors.push(this.getRandomColor());\n            }\n            console.log(this.names);\n            console.log(this.lostCounts);\n            console.log(this.winCounts);\n        }, error => {\n            console.error(error);\n        }, () => {\n\n        });\n\n\n    }\n\n    /**\n     * Returns the name with first letter as capital.\n     * @param {string} set The username.\n     * @returns The username with first alphabet capitalized.\n     */\n    capitalize(set) {\n        return set.charAt(0).toUpperCase() + set.slice(1);\n    }\n\n    /**\n     * Used to generate a random color.\n     * @returns A Random color.\n     */\n    getRandomColor() {\n        let letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i \n    \n\n    \n        \n    Users\n    \n        \n            \n            Player Name\n            Games Completed\n            Lost Count\n            Win Count\n        \n            \n                {{item.toString().charAt(0).toUpperCase()}}\n                {{capitalize(item.toString())}}\n                 {{+lostCounts[i] + +winCounts[i]}} \n                {{lostCounts[i]}}\n                {{winCounts[i]}}\n            \n    \n\nclick here to start a new game.\n\n    \n\n    \n                \n                    ./score-table.component.scss\n                \n                $baseColor: #398B93;\n$borderRadius: 10px;\n$imageBig: 100px;\n$imageSmall: 60px;\n$padding: 10px;\n\nbody {\n    background-color: #8AA39B;\n    * { box-sizing: border-box; }\n}\n\n.header {\n    background-color: darken($baseColor, 5%);\n    color: white;\n    font-size: 1.5em;\n    padding: 1rem;\n    text-align: center;\n    text-transform: uppercase;\n}\n\nimg {\n    border-radius: 50%;\n    height: $imageSmall;\n    width: $imageSmall;\n}\n\n.table-users {\n    border: 1px solid darken($baseColor, 5%);\n    border-radius: $borderRadius;\n    box-shadow: 3px 3px 0 rgba(0,0,0,0.1);\n    max-width: calc(100% - 2em);\n    margin: 1em auto;\n    overflow: hidden;\n    width: 800px;\n}\n\ntable {\n    width: 100%;\n\n    td, th {\n        color: darken($baseColor, 10%);\n        padding: $padding;\n    }\n\n    td {\n        text-align: center;\n        vertical-align: middle;\n\n        &:last-child {\n            font-size: 0.95em;\n            line-height: 1.4;\n            text-align: left;\n        }\n    }\n\n    th {\n        background-color: lighten($baseColor, 50%);\n        font-weight: 300;\n    }\n\n    tr {\n        &:nth-child(2n) { background-color: white; }\n        &:nth-child(2n+1) { background-color: lighten($baseColor, 55%) }\n    }\n}\n\n@media screen and (max-width: 700px) {\n    table, tr, td { display: block; }\n\n    td {\n        &:first-child {\n            position: absolute;\n            top: 50%;\n            transform: translateY(-50%);\n            width: $imageBig;\n        }\n\n        &:not(:first-child) {\n            clear: both;\n            margin-left: $imageBig;\n            padding: 4px 20px 4px 90px;\n            position: relative;\n            text-align: left;\n\n            &:before {\n                color: lighten($baseColor, 30%);\n                content: '';\n                display: block;\n                left: 0;\n                position: absolute;\n            }\n        }\n\n        &:nth-child(2):before { content: 'Name:'; }\n        &:nth-child(3):before { content: 'Email:'; }\n        &:nth-child(4):before { content: 'Phone:'; }\n        &:nth-child(5):before { content: 'Comments:'; }\n    }\n\n    tr {\n        padding: $padding 0;\n        position: relative;\n        &:first-child { display: none; }\n    }\n}\n\n@media screen and (max-width: 500px) {\n    .header {\n        background-color: transparent;\n        color: lighten($baseColor, 60%);\n        font-size: 2em;\n        font-weight: 700;\n        padding: 0;\n        text-shadow: 2px 2px 0 rgba(0,0,0,0.1);\n    }\n\n    img {\n        border: 3px solid;\n        border-color: lighten($baseColor, 50%);\n        height: $imageBig;\n        margin: 0.5rem 0;\n        width: $imageBig;\n    }\n\n    td {\n        &:first-child {\n            background-color: lighten($baseColor, 45%);\n            border-bottom: 1px solid lighten($baseColor, 30%);\n            border-radius: $borderRadius $borderRadius 0 0;\n            position: relative;\n            top: 0;\n            transform: translateY(0);\n            width: 100%;\n        }\n\n        &:not(:first-child) {\n            margin: 0;\n            padding: 5px 1em;\n            width: 100%;\n\n            &:before {\n                font-size: .8em;\n                padding-top: 0.3em;\n                position: relative;\n            }\n        }\n\n        &:last-child  { padding-bottom: 1rem !important; }\n    }\n\n    tr {\n        background-color: white !important;\n        border: 1px solid lighten($baseColor, 20%);\n        border-radius: $borderRadius;\n        box-shadow: 2px 2px 0 rgba(0,0,0,0.1);\n        margin: 0.5rem 0;\n        padding: 0;\n    }\n\n    .table-users {\n        border: none;\n        box-shadow: none;\n        overflow: visible;\n    }\n}\n\n\n[data-letters]:before {\n    content:attr(data-letters);\n    display:inline-block;\n    font-size:1em;\n    width:2.5em;\n    height:2.5em;\n    line-height:2.5em;\n    text-align:center;\n    border-radius:50%;\n    background:plum;\n    vertical-align:middle;\n    margin-right:1em;\n    color:white;\n}\n\n.circleIt {\n    display:inline-block !important;\n    font-size:1em !important;\n    width:2.5em !important;\n    height:2.5em !important;\n    line-height:2.5em !important;\n    text-align:center !important;\n    border-radius:50% !important;\n    vertical-align:middle !important;\n    margin-right:1em !important;\n    color:white !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Users                                    Player Name            Games Completed            Lost Count            Win Count                                    {{item.toString().charAt(0).toUpperCase()}}                {{capitalize(item.toString())}}                 {{+lostCounts[i] + +winCounts[i]}}                 {{lostCounts[i]}}                {{winCounts[i]}}                click here to start a new game.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'Battleboard2Component', 'selector': 'app-battleboard2'},{'name': 'BattleboardComponent', 'selector': 'app-battleboard'},{'name': 'ScoreTableComponent', 'selector': 'app-score-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScoreTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/battleboard/battleboard.component.ts\n            \n            component\n            BattleboardComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                src/app/components/battleboard2/battleboard2.component.ts\n            \n            component\n            Battleboard2Component\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/components/score-table/score-table.component.ts\n            \n            component\n            ScoreTableComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/battle.service.ts\n            \n            injectable\n            BattleService\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            jquery : ^3.3.1\n        \n            net : ^1.0.2\n        \n            regex : ^0.1.1\n        \n            rxjs : ~6.3.3\n        \n            sockjs-client : ^1.3.0\n        \n            stompjs : ^2.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBattleshipFront\nThis project was generated with Angular CLI version 7.3.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nAngular Front-End\nThe front-end was built in angular as it makes it easier and organized for bigger applications. Although Battleship is a small game, dividing various parts into components will make it easy to upgrade in future. There two components in this applicaton:\n\nBattleBoard, and\nBattleBoard2\nScoreTable\n\nBoth are the same design and almost same functions. They are the main web-app for player1, and player2. The game always works in pairs; when the first component is instantiated, it contains a link, which when clicked, instantiates the second component.\nThe application is built with a minimal design where the left part contains the player's board with her ship positions that were initialized randomly. Further, the right half contains an empty board through which the other player can be attacked by clicking a particular cell.\nThe applications initially requests a username, which is then used as a unique-id. If a user uses the same name in another instance, their win-count will be updated in the repository.\nThe third component displays the scorecard. It contains three columns displaying the user-name, the number of times they have lost the game and won the game. For a user to have their name in the score-card, they should have, at least once completed the game fully.\nFurther, the application has one service, BattleService that handles all the REST api calls. Websocket communications are handled by component themselves. The application uses Routing to toggle between different components in the application using pseudo URL's generated.\nFeatures\n\nApart from the enemy's board, users can also see their own board and the ship positions. \nThe enemy attacks on a player's board are also marked. \nIf the enemy attacks correctly on a ship, a \"fire\" symbol appears in that positions.\nA scorecard, as mentioned above, is also implemented.\nUsers can also see an error message if, for any reason, the websockets connection is lost with the server.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBattleboard2Component\n\nBattleboard2Component\n\nAppModule -->\n\nBattleboard2Component->AppModule\n\n\n\n\n\nBattleboardComponent\n\nBattleboardComponent\n\nAppModule -->\n\nBattleboardComponent->AppModule\n\n\n\n\n\nScoreTableComponent\n\nScoreTableComponent\n\nAppModule -->\n\nScoreTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBattleService\n\nBattleService\n\nAppModule -->\n\nBattleService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
